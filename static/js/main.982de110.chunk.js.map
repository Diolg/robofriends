{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","id","name","email","CardList","_ref","robots","cardComponent","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","inherits","createClass","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.982de110.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = (props) => {\n    return (\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n        <img alt=\"robots\" src= {`https://robohash.org/${props.id}?200x200`} />\n            <div>\n            <h2>{props.name}</h2>\n            <p>{props.email}</p>\n            </div>\n        </div>\n            );\n        }\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n    const cardComponent = robots.map((user, i) => {\n      return <Card key={i} \n      id= {robots[i].id} \n      name= {robots[i].name} \n      email= {robots[i].email}/>\n    }\n    )\n    return (\n    <div>\n       {cardComponent}\n    </div>\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return(\n    <div className=\"pa2\">\n       <input className=\"pa3 ba b--green bg-lightest blue\" type=\"search\" \n       placeholder=\"search for robots\"\n       onChange={searchChange} />\n    </div>\n    )\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: \"scroll\", border: \"5px solid black\", height: \"800px\"}}>\n            {props.children}\n        </div>\n    )\n};\n\n\nexport default Scroll;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\n//import { robots } from \"./robots\"; \nimport \"../containers/App.css\";\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n        robots: [], //robots,\n        searchfield: \"\"\n        }\n    }\n\ncomponentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n       .then(response=>response.json())\n       .then(users => this.setState({ robots: users}));\n    }\n\n\n\n\n  //whenever we call this function the event happens  \n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() { \n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n          })\n        return !robots.length ?\n            <h1>Loading, wait...</h1> :\n            (\n    <div className=\"tc\">\n    <h1> Robofriends are always with you!</h1>\n    <h2> Find your favourite</h2>\n    <SearchBox searchChange={this.onSearchChange} />\n    <Scroll>\n     <CardList robots = {filteredRobots} />\n     </Scroll>\n     </div>\n    );\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n//import CardList from './CardList';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n <React.StrictMode>\n   <App />\n  </React.StrictMode>\n);\n\n//ReactDOM.render(<Hello />, document.getElementById(\"root\"));\n\n//const root = ReactDOM.createRoot(document.getElementById('root'));\n//root.render(\n //<React.StrictMode>\n   //<CardList robots = {robots} />\n  //</React.StrictMode>\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}